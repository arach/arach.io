---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";

export interface Props {
  currentPost: CollectionEntry<"blog">;
}

const { currentPost } = Astro.props;

// Get all blog posts in the same series
const allPosts = await getCollection("blog");
const seriesPosts = currentPost.data.series ? allPosts
  .filter(post => 
    post.data.series?.name === currentPost.data.series?.name && 
    !post.data.draft
  )
  .sort((a, b) => (a.data.series?.order || 0) - (b.data.series?.order || 0)) : [];

const currentIndex = seriesPosts.findIndex(post => post.slug === currentPost.slug);
const previousPost = currentIndex > 0 ? seriesPosts[currentIndex - 1] : null;
const nextPost = currentIndex < seriesPosts.length - 1 ? seriesPosts[currentIndex + 1] : null;

// Only show series navigation if the current post is part of a series and series has more than one post
const showSeriesNav = currentPost.data.series && seriesPosts.length > 1;
---

{showSeriesNav && (
<nav class="series-navigation" aria-label={`${currentPost.data.series.name} series navigation`}>
  <div class="series-header">
    <p class="series-label">Special Series</p>
    <h3 class="series-title">
      <span class="series-icon">üìö</span>
      {currentPost.data.series.name}
    </h3>
    <p class="series-progress">
      Part {currentPost.data.series.order} of {seriesPosts.length}
    </p>
  </div>

  <div class="series-list">
    {seriesPosts.map((post, index) => {
      const isCurrent = post.slug === currentPost.slug;
      const isCompleted = index < currentIndex;
      
      return (
        <div class={`series-item ${isCurrent ? 'current' : ''} ${isCompleted ? 'completed' : ''}`}>
          <div class="series-number">
            {isCompleted ? '‚úì' : post.data.series?.order}
          </div>
          <div class="series-content">
            {isCurrent ? (
              <span class="series-current-title">{post.data.title}</span>
            ) : (
              <a href={`/posts/${post.slug}/`} class="series-link">
                {post.data.title}
              </a>
            )}
          </div>
        </div>
      );
    })}
  </div>

  <div class="series-navigation-buttons">
    {previousPost && (
      <a href={`/posts/${previousPost.slug}/`} class="series-nav-button prev">
        <span class="nav-direction">‚Üê Previous</span>
        <span class="nav-title">{previousPost.data.title}</span>
      </a>
    )}
    {nextPost && (
      <a href={`/posts/${nextPost.slug}/`} class="series-nav-button next">
        <span class="nav-direction">Next ‚Üí</span>
        <span class="nav-title">{nextPost.data.title}</span>
      </a>
    )}
  </div>
</nav>
)}

<style>
  .series-navigation {
    @apply bg-skin-card border border-skin-line rounded-lg p-5;
    /* Reset prose styles since this sits inside the article */
    color: rgb(var(--color-text-base));
    font-family: inherit;
  }

  /* Mobile: inline navigation */
  @media (max-width: 1023px) {
    .series-navigation {
      @apply mb-8;
    }
  }

  /* Desktop: floating sidebar */
  @media (min-width: 1024px) {
    .series-navigation {
      @apply fixed top-1/2 transform -translate-y-1/2 z-30 text-left;
      right: 2rem;
      width: 320px;
      max-height: 80vh;
      overflow-y: auto;
      box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    }

    /* Position next to the content area (matches header: 1200px) */
    @media (min-width: 1300px) {
      .series-navigation {
        right: calc((100vw - 1200px) / 2 - 340px);
      }
    }
  }

  .series-header {
    @apply mb-4;
  }

  .series-label {
    @apply text-xs font-medium text-skin-accent opacity-80 mb-2 uppercase tracking-wider;
  }

  .series-title {
    @apply flex items-center gap-2 text-lg font-semibold text-skin-accent mb-1;
  }

  .series-icon {
    @apply text-base;
  }

  .series-progress {
    @apply text-sm text-skin-base opacity-70;
  }

  .series-list {
    @apply space-y-2 mb-4;
  }

  .series-item {
    @apply flex items-start gap-3 p-3 rounded-md transition-colors;
  }

  .series-item.current {
    @apply bg-skin-accent bg-opacity-10;
  }

  .series-item.completed {
    @apply opacity-75;
  }

  .series-number {
    @apply flex-shrink-0 w-6 h-6 rounded-full bg-skin-accent bg-opacity-20 flex items-center justify-center text-xs font-medium;
  }

  .series-item.current .series-number {
    @apply bg-skin-accent text-skin-inverted;
  }

  .series-item.completed .series-number {
    @apply bg-green-500 text-white;
  }

  .series-content {
    @apply flex-1 min-w-0;
  }

  .series-link {
    @apply text-skin-base hover:text-skin-accent transition-colors text-base line-clamp-2;
    text-decoration: none;
  }

  .series-link:hover {
    @apply underline;
  }

  .series-current-title {
    @apply text-skin-accent font-medium text-base line-clamp-2;
  }

  .series-navigation-buttons {
    @apply flex gap-2 pt-3 border-t border-skin-line;
  }

  .series-nav-button {
    @apply flex-1 p-2 rounded-md border border-skin-line hover:bg-skin-card-muted transition-colors;
    text-decoration: none;
  }

  .series-nav-button.next {
    @apply text-right;
  }

  .nav-direction {
    @apply block text-xs font-medium text-skin-accent mb-1;
  }

  .nav-title {
    @apply block text-xs text-skin-base line-clamp-2;
  }

  .series-nav-button:hover .nav-title {
    @apply text-skin-accent;
  }

  /* Mobile responsiveness */
  @media (max-width: 640px) {
    .series-navigation-buttons {
      @apply flex-col;
    }
    
    .series-nav-button.next {
      @apply text-left;
    }
  }
</style>