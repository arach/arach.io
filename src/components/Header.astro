---
import { LOGO_IMAGE, SITE } from "@config";
import { Icon } from 'astro-icon/components';

export interface Props {
  activeNav?: string;
}

const { activeNav } = Astro.props;

const navItems = [
  { href: "/posts/", label: "Blog" },
  { href: "/til/", label: "TIL" },
  // { href: "/memos/", label: "Memos" }, // Hidden until we have 3+ memos
  { href: "/books/", label: "Books" },
  { href: "/about/", label: "About" },
  { href: "/resume/", label: "Resume" },
];
---

<header class="header">
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="container">
    <a href="/" class="logo">
      {
        LOGO_IMAGE.enable ? (
          <>
            <img src="/assets/arach.io-logo-photo.png" alt={SITE.title} class="logo-light" />
            <img src="/assets/arach.io-logo-photo-white.png" alt={SITE.title} class="logo-dark" />
          </>
        ) : (
          <span class="logo-text">{SITE.title}</span>
        )
      }
    </a>
    
    <nav class="nav">
      <button class="menu-toggle" aria-label="Menu" aria-expanded="false">
        <span class="hamburger"></span>
        <span class="hamburger"></span>
        <span class="hamburger"></span>
      </button>
      
      <ul class="nav-list">
        {navItems.map(({ href, label }) => (
          <li>
            <a href={href} class={
              (activeNav === label.toLowerCase()) || 
              (activeNav === "posts" && label === "Blog") 
                ? "nav-link active" : "nav-link"
            }>
              {label}
            </a>
          </li>
        ))}
        <li class="nav-actions">
          <a href="/search/" class={`icon-btn ${activeNav === "search" ? "active" : ""}`} title="Search">
            <Icon name="lucide:search" class="w-5 h-5" />
          </a>
          {SITE.lightAndDarkMode && (
            <button id="theme-btn" class="icon-btn" title="Toggle theme">
              <Icon name="lucide:sun" class="sun-icon w-5 h-5" />
              <Icon name="lucide:moon" class="moon-icon w-5 h-5" />
            </button>
          )}
        </li>
      </ul>
    </nav>
  </div>
</header>

<style>
  /* Header */
  .header {
    position: sticky;
    top: 0;
    z-index: 50;
    width: 100%;
    background: rgb(var(--color-fill));
    border-bottom: 1px solid rgb(var(--color-border));
    transition: all 0.3s ease;
  }
  
  :global([data-theme="dark"]) .header {
    background: rgb(24, 24, 27);
    border-bottom: 1px solid rgb(39, 39, 42);
  }

  /* Skip to content */
  #skip-to-content {
    position: absolute;
    top: -100%;
    left: 1rem;
    z-index: 100;
    padding: 0.5rem 1rem;
    background: rgb(var(--color-accent));
    color: white;
    border-radius: 0.375rem;
    text-decoration: none;
    transition: all 0.3s ease;
  }
  
  #skip-to-content:focus {
    top: 1rem;
  }

  /* Container */
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.5rem;
    height: 4rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  /* Logo */
  .logo {
    display: flex;
    align-items: center;
    text-decoration: none;
    transition: opacity 0.2s ease;
  }
  
  .logo:hover {
    opacity: 0.8;
  }

  .logo img {
    height: 2.5rem;
    width: auto;
    transition: transform 0.2s ease;
  }
  
  .logo:hover img {
    transform: scale(1.02);
  }

  .logo-light {
    display: block;
  }
  
  .logo-dark {
    display: none;
  }
  
  :global([data-theme="dark"]) .logo-light {
    display: none;
  }
  
  :global([data-theme="dark"]) .logo-dark {
    display: block;
  }

  .logo-text {
    font-size: 1.25rem;
    font-weight: 600;
    color: rgb(var(--color-text-base));
    letter-spacing: -0.025em;
  }

  /* Navigation */
  .nav {
    display: flex;
    align-items: center;
  }

  .menu-toggle {
    display: none;
    flex-direction: column;
    background: none;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    border-radius: 0.375rem;
    transition: background-color 0.2s ease;
  }
  
  .menu-toggle:hover {
    background: rgba(var(--color-text-base), 0.05);
  }

  .hamburger {
    width: 20px;
    height: 2px;
    background: rgb(var(--color-text-base));
    border-radius: 1px;
    transition: all 0.3s ease;
    margin: 2px 0;
  }

  .menu-toggle[aria-expanded="true"] .hamburger:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
  }

  .menu-toggle[aria-expanded="true"] .hamburger:nth-child(2) {
    opacity: 0;
  }

  .menu-toggle[aria-expanded="true"] .hamburger:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -6px);
  }

  .nav-list {
    display: flex;
    align-items: center;
    list-style: none;
    margin: 0;
    padding: 0;
    gap: 0.5rem;
  }

  /* Navigation Links */
  .nav-link {
    position: relative;
    padding: 0.5rem 1rem;
    color: rgba(var(--color-text-base), 0.9);
    text-decoration: none;
    font-size: 0.9rem;
    font-weight: 450;
    letter-spacing: 0.01em;
    border-radius: 0.375rem;
    transition: all 0.2s ease;
  }

  .nav-link:hover {
    color: rgb(var(--color-text-base));
    background: rgba(var(--color-text-base), 0.04);
  }

  .nav-link.active {
    color: rgb(var(--color-accent));
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(8px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  :global([data-theme="dark"]) .nav-link.active {
    background: rgba(255, 255, 255, 0.08);
    border: 1px solid rgba(255, 255, 255, 0.15);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }

  /* Navigation Actions */
  .nav-actions {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    margin-left: 1rem;
    padding-left: 1rem;
    border-left: 1px solid rgba(var(--color-border), 0.3);
  }

  .icon-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2.25rem;
    height: 2.25rem;
    background: none;
    border: none;
    color: rgba(var(--color-text-base), 0.8);
    border-radius: 0.375rem;
    cursor: pointer;
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .icon-btn:hover {
    color: rgb(var(--color-text-base));
    background: rgba(var(--color-text-base), 0.06);
  }

  .icon-btn.active {
    color: rgb(var(--color-accent));
    background: rgba(var(--color-accent), 0.1);
  }

  /* Theme Toggle Icons */
  .sun-icon {
    display: block;
  }
  
  .moon-icon {
    display: none;
  }
  
  [data-theme="dark"] .sun-icon {
    display: none;
  }
  
  [data-theme="dark"] .moon-icon {
    display: block;
  }

  /* Mobile */
  @media (max-width: 768px) {
    .menu-toggle {
      display: flex;
    }

    .nav-list {
      position: absolute;
      top: 100%;
      left: 1.5rem;
      right: 1.5rem;
      flex-direction: column;
      background: rgba(255, 255, 255, 0.95);
      border: 1px solid rgba(var(--color-border), 0.1);
      border-radius: 0.75rem;
      padding: 1rem;
      gap: 0.25rem;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
      backdrop-filter: blur(12px);
      opacity: 0;
      visibility: hidden;
      transform: translateY(-10px);
      transition: all 0.2s ease;
    }
    
    [data-theme="dark"] .nav-list {
      background: rgba(24, 24, 27, 0.95);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
    }

    .menu-toggle[aria-expanded="true"] + .nav-list {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }

    .nav-list li {
      width: 100%;
    }

    .nav-link {
      display: block;
      width: 100%;
      padding: 0.75rem;
      text-align: left;
    }

    .nav-actions {
      flex-direction: row;
      justify-content: center;
      margin-left: 0;
      padding-left: 0;
      padding-top: 0.5rem;
      border-left: none;
      border-top: 1px solid rgba(var(--color-border), 0.2);
      margin-top: 0.5rem;
    }
  }
</style>

<script>
  function setupNav() {
    // Mobile menu toggle
    const menuBtn = document.querySelector(".menu-toggle");

    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );
    });

    // Theme toggle functionality
    const themeBtn = document.querySelector("#theme-btn");
    const htmlElement = document.documentElement;
    
    themeBtn?.addEventListener("click", () => {
      const currentTheme = htmlElement.getAttribute("data-theme");
      const newTheme = currentTheme === "light" ? "dark" : "light";
      const isDark = newTheme === "dark";
      
      htmlElement.setAttribute("data-theme", newTheme);
      localStorage.setItem("theme", newTheme);
      
      // Dispatch custom event for ThemePickerCool to sync
      window.dispatchEvent(new CustomEvent('theme-change', { 
        detail: { isDark: isDark } 
      }));
    });
    
    // Debug: log which logo should be visible
    const currentTheme = htmlElement.getAttribute("data-theme");
    const logoLight = document.querySelector('.logo-light');
    const logoDark = document.querySelector('.logo-dark');
    
    if (logoLight && logoDark) {
      console.log("Current theme:", currentTheme);
      console.log("Logo light display:", window.getComputedStyle(logoLight).display);
      console.log("Logo dark display:", window.getComputedStyle(logoDark).display);
      console.log("Logo light src:", (logoLight as HTMLImageElement).src);
      console.log("Logo dark src:", (logoDark as HTMLImageElement).src);
    }
  }

  setupNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", setupNav);
</script>
