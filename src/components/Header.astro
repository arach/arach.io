---
import { LOGO_IMAGE, SITE } from "@config";
import Hr from "./Hr.astro";
import LinkButton from "./LinkButton.astro";
import { Icon } from 'astro-icon/components';

export interface Props {
  activeNav?: string;
}

const { activeNav } = Astro.props;

const navItems = [
  { href: "/posts/", label: "Posts" },
  { href: "/til/", label: "TIL" },
  // { href: "/memos/", label: "Memos" }, // Hidden until we have 3+ memos
  { href: "/books/", label: "Books" },
  { href: "/about/", label: "About" },
  { href: "/resume/", label: "Resume" },
];
---

<header class="elegant-header">
  <a id="skip-to-content" href="#main-content">Skip to content</a>
  <div class="nav-container">
    <div class="nav-content">
      <a href="/" class="logo-link">
        {
          LOGO_IMAGE.enable ? (
            <>
              <img
                src="/assets/arach.io-logo-photo.png"
                alt={SITE.title}
                class="logo-image logo-light"
              />
              <img
                src="/assets/arach.io-logo-photo-white.png"
                alt={SITE.title}
                class="logo-image logo-dark"
              />
            </>
          ) : (
            <span class="logo-text">{SITE.title}</span>
          )
        }
      </a>
      <nav id="nav-menu">
        <button
          class="mobile-menu-btn"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <Icon name="lucide:menu" class="menu-open w-5 h-5" />
          <Icon name="lucide:x" class="menu-close w-5 h-5" />
        </button>
        <ul id="menu-items" class="nav-list">
          {
            navItems.map(({ href, label }) => (
              <li>
                <a
                  href={href}
                  class={`nav-link ${activeNav === label.toLowerCase() ? "active" : ""}`}
                >
                  {label}
                </a>
              </li>
            ))
          }
          <li class="nav-separator"></li>
          <li>
            <a
              href="/search/"
              class={`icon-link ${activeNav === "search" ? "active" : ""}`}
              aria-label="Search"
              title="Search"
            >
              <Icon name="lucide:search" class="w-4 h-4" />
            </a>
          </li>
          {
            SITE.lightAndDarkMode && (
              <li>
                <button
                  id="theme-btn"
                  class="icon-link"
                  title="Toggle theme"
                  aria-label="Toggle theme"
                  aria-live="polite"
                >
                  <Icon name="lucide:moon" class="theme-icon moon-icon w-4 h-4" />
                  <Icon name="lucide:sun" class="theme-icon sun-icon w-4 h-4" />
                </button>
              </li>
            )
          }
        </ul>
      </nav>
    </div>
  </div>
</header>

<style>
  /* Header container */
  .elegant-header {
    @apply sticky top-0 z-40 w-full;
    background: rgba(var(--color-fill), 0.95);
    backdrop-filter: saturate(180%) blur(20px);
    -webkit-backdrop-filter: saturate(180%) blur(20px);
    border-bottom: 1px solid rgb(var(--color-border) / 0.1);
    animation: slideDown 0.3s ease-out;
  }

  @keyframes slideDown {
    from {
      transform: translateY(-100%);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  /* Skip to content link */
  #skip-to-content {
    @apply absolute -top-full left-4 z-50 rounded-md bg-skin-accent px-4 py-2 text-skin-inverted transition-all focus:top-4;
  }

  /* Navigation container */
  .nav-container {
    @apply mx-auto px-4 sm:px-6 lg:px-8;
    max-width: 1200px;
  }

  .nav-content {
    @apply flex h-20 items-center justify-between;
  }

  /* Logo */
  .logo-link {
    @apply flex items-center transition-opacity hover:opacity-80;
  }

  .logo-image {
    @apply h-12 w-auto sm:h-14;
    transition: transform 0.3s ease;
  }
  
  /* Show appropriate logo based on theme */
  /* Light mode (default): show regular logo, hide white logo */
  .logo-light {
    display: block;
  }
  
  .logo-dark {
    display: none;
  }
  
  /* Dark mode: hide regular logo, show white logo */
  [data-theme="dark"] .logo-light {
    display: none;
  }
  
  [data-theme="dark"] .logo-dark {
    display: block;
  }
  
  .logo-link:hover .logo-image {
    transform: scale(1.05) rotate(2deg);
  }

  .logo-text {
    @apply text-lg font-semibold tracking-tight sm:text-xl;
  }

  /* Mobile menu button */
  .mobile-menu-btn {
    @apply sm:hidden p-2 rounded-md transition-colors hover:bg-skin-card-muted;
  }

  .mobile-menu-btn .menu-close {
    @apply hidden;
  }

  .mobile-menu-btn[aria-expanded="true"] .menu-open {
    @apply hidden;
  }

  .mobile-menu-btn[aria-expanded="true"] .menu-close {
    @apply block;
  }

  /* Navigation list */
  .nav-list {
    @apply hidden sm:flex sm:items-center sm:gap-1;
  }

  /* Nav links */
  .nav-link {
    @apply relative px-3 py-2 text-sm font-medium transition-colors;
    color: rgb(var(--color-text-base) / 0.7);
  }

  .nav-link:hover {
    color: rgb(var(--color-text-base));
  }

  .nav-link.active {
    color: rgb(var(--color-accent));
    font-weight: 500;
  }

  /* Separator */
  .nav-separator {
    @apply hidden sm:block w-px h-6 mx-2;
    background-color: rgb(var(--color-border) / 0.2);
  }

  /* Icon links */
  .icon-link {
    @apply p-2 rounded-md transition-colors;
    color: rgb(var(--color-text-base) / 0.7);
  }

  .icon-link:hover {
    @apply bg-skin-card-muted;
    color: rgb(var(--color-text-base));
  }

  .icon-link.active {
    color: rgb(var(--color-accent));
  }

  /* Theme toggle */
  .theme-icon {
    @apply transition-transform duration-300;
  }

  .icon-link:hover .theme-icon {
    @apply rotate-12;
  }

  /* Default to moon icon (for dark mode toggle) */
  .sun-icon {
    @apply hidden;
  }

  [data-theme="dark"] .moon-icon {
    @apply hidden;
  }

  [data-theme="dark"] .sun-icon {
    @apply block;
  }

  /* Mobile menu */
  @media (max-width: 639px) {
    .nav-list {
      @apply absolute left-0 right-0 top-20 mx-4 flex-col gap-1 rounded-lg bg-skin-fill p-4 shadow-lg;
      border: 1px solid rgb(var(--color-border) / 0.1);
      display: none;
    }

    .mobile-menu-btn[aria-expanded="true"] ~ .nav-list {
      @apply flex;
      animation: slideDown 0.2s ease-out;
    }

    .nav-list li {
      @apply w-full;
    }

    .nav-link {
      @apply block w-full rounded-md px-3 py-2 hover:bg-skin-card-muted;
    }

    .nav-link.active::after {
      @apply hidden;
    }

    .nav-separator {
      @apply block w-full h-px my-2 mx-0;
      background-color: rgb(var(--color-border) / 0.2);
    }

    .nav-list > li:last-child,
    .nav-list > li:nth-last-child(2) {
      @apply inline-block w-auto;
    }
  }
</style>

<script>
  function setupNav() {
    // Mobile menu toggle
    const menuBtn = document.querySelector(".mobile-menu-btn");
    const menuItems = document.querySelector("#menu-items");

    menuBtn?.addEventListener("click", () => {
      const menuExpanded = menuBtn.getAttribute("aria-expanded") === "true";
      menuBtn.setAttribute("aria-expanded", menuExpanded ? "false" : "true");
      menuBtn.setAttribute(
        "aria-label",
        menuExpanded ? "Open Menu" : "Close Menu"
      );
    });

    // Theme toggle functionality
    const themeBtn = document.querySelector("#theme-btn");
    const htmlElement = document.documentElement;
    
    themeBtn?.addEventListener("click", () => {
      const currentTheme = htmlElement.getAttribute("data-theme");
      const newTheme = currentTheme === "light" ? "dark" : "light";
      htmlElement.setAttribute("data-theme", newTheme);
      localStorage.setItem("theme", newTheme);
    });
    
    // Debug: log which logo should be visible
    const currentTheme = htmlElement.getAttribute("data-theme");
    console.log("Current theme:", currentTheme);
    console.log("Logo light display:", window.getComputedStyle(document.querySelector('.logo-light')).display);
    console.log("Logo dark display:", window.getComputedStyle(document.querySelector('.logo-dark')).display);
  }

  setupNav();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", setupNav);
</script>
