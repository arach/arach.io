---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import LinkButton from "@components/LinkButton.astro";
import Hr from "@components/Hr.astro";
import Card from "@components/Card";
import PostCard from "@components/PostCard";
import Hero from "@components/Hero.astro";
import Socials from "@components/Socials.astro";
import CompanyLogos from "@components/CompanyLogos.astro";
import CalBooking from "@components/CalBooking";
import getSortedPosts from "@utils/getSortedPosts";
import { SOCIALS } from "@config";
import socialIcons from "@assets/socialIcons";

const posts = await getCollection("blog");

const sortedPosts = getSortedPosts(posts);
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);
const recentPosts = sortedPosts.filter(({ data }) => !data.featured);

const socialCount = SOCIALS.filter(social => social.active).length;
---

<Layout>
  <Header />
  <main id="main-content" class="index-main">
    <section id="hero" class="hero-section">
      <div class="hero-container">
        <div class="hero-content">
          <h1 class="hero-title animate-in">
            Startup Founder, Engineering Leader,<br /> and AI Enthusiast
          </h1>

          <p class="hero-description animate-in-slow">
            Hi, I'm <strong>Arach</strong>. I'm a software engineer who loves
            turning ideas into reality. From Startups to Meta, I've learned how 
            to bridge the gap between technical execution and business vision.
          </p>

          <div class="achievement-badges animate-in">
            <span class="badge">Engineering Leadership</span>
            <span class="badge">Startup Founder</span>
            <span class="badge">AI Development</span>
            <span class="badge">InsurTech</span>
            <span class="badge">Product Strategy</span>
          </div>

          <div class="cta-buttons animate-in">
            <LinkButton href="/posts/" className="cta-primary">
              Explore My Work
              <svg
                xmlns="http://www.w3.org/2000/svg"
                className="ml-3.5 h-4 w-4"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
              </svg>
            </LinkButton>
            <CalBooking client:load />
          </div>
        </div>

        <div class="hero-image-wrapper animate-in">
          <div class="hero-image-container">
            <div class="hero-image-gradient"></div>
            <img
              src="/assets/arach-circle.png"
              alt="Arach Tchoupani"
              class="hero-image"
            />
          </div>
        </div>
      </div>
    </section>
    
    <section id="companies" class="companies-section">
      <CompanyLogos />
    </section>

    {
      featuredPosts.length > 0 && (
        <>
          <section id="featured" class="content-section">
            <h2 class="section-title animate-in">Featured Posts</h2>
            <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3 stagger-children">
              {featuredPosts.map(({ data, slug }) => (
                <PostCard
                  href={`/posts/${slug}/`}
                  frontmatter={data}
                  secHeading={false}
                />
              ))}
            </div>
          </section>
          {recentPosts.length > 0 && <Hr noPadding={false} />}
        </>
      )
    }

    {
      recentPosts.length > 0 && (
        <section id="recent-posts" class="content-section">
          <h2 class="section-title animate-in">Recent Posts</h2>
          <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3 stagger-children">
            {recentPosts.map(
              ({ data, slug }, index) =>
                index < 6 && (
                  <PostCard
                    href={`/posts/${slug}/`}
                    frontmatter={data}
                    secHeading={false}
                  />
                )
            )}
          </div>
        </section>
      )
    }

    <div class="all-posts-btn-wrapper">
      <LinkButton
        href="/posts/"
        className="inline-flex items-center px-6 py-3 text-base font-medium rounded-lg"
      >
        View All Posts
        <svg xmlns="http://www.w3.org/2000/svg" className="ml-2 h-5 w-5"
          ><path
            d="m11.293 17.293 1.414 1.414L19.414 12l-6.707-6.707-1.414 1.414L15.586 11H6v2h9.586z"
          ></path>
        </svg>
      </LinkButton>
    </div>

    <Footer />
  </main>

  <style>
    /* ===== Main Content ===== */
    .index-main {
      @apply w-full;
      margin-top: 3rem;
      padding-top: 0;
    }
    
    @media (min-width: 768px) {
      .index-main {
        margin-top: 5rem;
      }
    }

    /* ===== Hero Section ===== */
    .hero-section {
      @apply pb-12 pt-16 md:pt-20;
    }

    .hero-container {
      @apply flex flex-col gap-8 lg:flex-row lg:items-center lg:gap-16;
    }

    .hero-content {
      @apply flex-1 pt-2;
    }

    .hero-title {
      @apply text-4xl font-black tracking-tighter leading-tight md:text-5xl;
    }

    .hero-subtitle {
      @apply mt-3 text-xl text-skin-base opacity-80 sm:text-2xl;
    }

    .hero-description {
      @apply mt-6 max-w-prose font-normal;
      font-size: 1.25rem;
      line-height: 1.75;
      color: rgb(var(--color-text-base) / 0.9);
    }
    
    @media (min-width: 768px) {
      .hero-description {
        font-size: 1.375rem;
        line-height: 1.8;
      }
    }
    
    .hero-description strong {
      @apply font-black;
    }

    .achievement-badges {
      @apply mt-6 flex flex-wrap gap-3;
    }

    .badge {
      @apply rounded-full px-3.5 py-1.5 text-xs font-semibold transition-all;
      background: rgb(var(--color-card-muted));
      border: 1px solid rgb(var(--color-border) / 0.5);
    }
    
    .badge:hover {
      border-color: rgb(var(--color-border));
      background: rgb(var(--color-card));
      transform: translateY(-1px);
    }

    .cta-buttons {
      @apply mt-8 flex flex-wrap gap-4;
    }

    .cta-primary {
      @apply inline-flex items-center rounded-lg bg-skin-accent px-5 py-2.5 text-sm font-medium text-skin-inverted transition-opacity;
    }
    
    .cta-primary:hover {
      @apply bg-skin-accent text-skin-inverted;
      opacity: 0.9;
    }
    
    .cta-primary:hover svg {
      animation: slideRight 0.3s ease-out;
    }

    .cta-secondary {
      @apply inline-flex items-center rounded-lg bg-skin-card px-5 py-2.5 text-sm font-medium transition-all;
      border: 1px solid rgb(var(--color-border));
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);
    }
    
    .cta-secondary:hover {
      @apply bg-skin-card-muted;
      border-color: rgb(var(--color-accent));
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    }
    
    .cta-secondary:hover svg {
      animation: bounceUp 0.4s ease-out;
    }
    
    html[data-theme="dark"] .cta-secondary {
      box-shadow: 0 1px 3px rgba(255, 255, 255, 0.08);
    }
    
    html[data-theme="dark"] .cta-secondary:hover {
      box-shadow: 0 4px 12px rgba(255, 255, 255, 0.15);
    }

    .hero-image-wrapper {
      @apply flex-shrink-0;
    }
    
    .hero-image-container {
      @apply relative;
    }
    
    .hero-image-gradient {
      @apply absolute -inset-4 rounded-full blur-3xl opacity-70;
      background: radial-gradient(circle at center, rgb(var(--color-accent) / 0.25), rgb(var(--color-accent) / 0.05));
    }

    .hero-image {
      @apply rounded-full object-cover shadow-2xl relative;
      width: 15.4rem;
      height: 15.4rem;
      transition: transform 0.3s ease;
      border: 5px solid rgba(255, 255, 255, 0.15);
    }

    .hero-image:hover {
      transform: scale(1.05) rotate(-5deg);
    }

    /* ===== Section Styles ===== */
    .section-title {
      @apply mb-6 text-3xl font-black tracking-tight;
    }

    .journey-content p,
    .current-content p {
      @apply mb-4 text-base leading-6;
    }

    .journey-content p:last-child,
    .current-content p:last-child {
      @apply mb-0;
    }
    
    .social-links-row {
      @apply flex flex-col items-center sm:flex-row sm:items-center sm:gap-4;
    }
    
    .social-links-row p {
      @apply sm:mb-0;
    }

    /* ===== Featured & Recent Posts Sections ===== */
    .content-section {
      @apply pb-6 pt-6;
    }
    
    #featured h2,
    #recent-posts h2 {
      @apply text-3xl font-bold tracking-tight ml-0;
    }
    .all-posts-btn-wrapper {
      @apply mt-12 mb-16 text-center;
    }

    /* Stagger children animations */
    .stagger-children > * {
      opacity: 0;
      animation: fadeIn 0.6s ease-out forwards;
    }

    .stagger-children > *:nth-child(1) {
      animation-delay: 0.1s;
    }
    .stagger-children > *:nth-child(2) {
      animation-delay: 0.2s;
    }
    .stagger-children > *:nth-child(3) {
      animation-delay: 0.3s;
    }
    .stagger-children > *:nth-child(4) {
      animation-delay: 0.4s;
    }
    .stagger-children > *:nth-child(5) {
      animation-delay: 0.5s;
    }
    .stagger-children > *:nth-child(6) {
      animation-delay: 0.6s;
    }

    
    /* ===== Companies Section ===== */
    .companies-section {
      @apply py-6 mt-6;
      background: rgb(var(--color-card-muted) / 0.3);
    }
    
    /* Dark mode: white background strip for logo visibility */
    html[data-theme="dark"] .companies-section {
      background: rgb(255, 255, 255);
      box-shadow: 0 0 0 100vmax rgb(255, 255, 255);
      clip-path: inset(0 -100vmax);
    }
    
    /* ===== Animations ===== */
    @keyframes slideRight {
      0%, 100% {
        transform: translateX(0);
      }
      50% {
        transform: translateX(3px);
      }
    }
    
    @keyframes bounceUp {
      0%, 100% {
        transform: translateY(0) rotate(0deg);
      }
      25% {
        transform: translateY(-2px) rotate(-5deg);
      }
      50% {
        transform: translateY(-3px) rotate(5deg);
      }
      75% {
        transform: translateY(-1px) rotate(-2deg);
      }
    }
  </style>
</Layout>
